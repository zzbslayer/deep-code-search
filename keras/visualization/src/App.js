import React, { Component } from 'react';
import './App.css';
import ReactEcharts from 'echarts-for-react';

import TSNE from 'tsne-js';
import Scatter from './Scatter'
import Bar from './Bar'

const _data =  [[2.0, 25.0, 168.0, 0.0, 0.0, 0.0, 3.0, 80.0, 3.0, 23.0, 3.0, 33.0, 3.0, 55.0, 3.0, 33.0, 3.0, 55.0, 3.0, 33.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 21.0, 71.0, 55.0, 42.0, 84.0, 10.0, 46.0, 19.0, 130.0, 175.0, 56.0, 79.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [872.0, 0.0, 0.0, 0.0, 0.0, 0.0, 232.0, 8378.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 864.0, 15.0, 424.0, 536.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [4.0, 7160.0, 435.0, 0.0, 0.0, 0.0, 2660.0, 1010.0, 2660.0, 999.0, 2660.0, 979.0, 2660.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 662.0, 832.0, 140.0, 742.0, 2.0, 701.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [5.0, 324.0, 217.0, 21.0, 0.0, 0.0, 7.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 230.0, 205.0, 75.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [5.0, 89.0, 4.0, 1508.0, 19.0, 341.0, 7.0, 21.0, 7.0, 10.0, 7.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 3468.0, 1423.0, 1973.0, 15.0, 98.0, 984.0, 2.0, 1226.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [7.0, 1686.0, 0.0, 0.0, 0.0, 0.0, 576.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 509.0, 563.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.0, 441.0, 538.0, 268.0, 0.0, 0.0, 323.0, 862.0, 3.0, 26.0, 323.0, 811.0, 1017.0, 2333.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2728.0, 311.0, 554.0, 94.0, 1245.0, 207.0, 468.0, 1139.0, 54.0, 505.0, 484.0, 2.0, 22.0, 101.0, 748.0, 220.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [11.0, 39.0, 81.0, 21.0, 0.0, 0.0, 2764.0, 1095.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2276.0, 217.0, 67.0, 75.0, 11.0, 2611.0, 452.0, 43.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2077.0, 1752.0, 842.0, 0.0, 0.0, 0.0, 555.0, 1962.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 149.0, 2.0, 882.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [11.0, 264.0, 0.0, 0.0, 0.0, 0.0, 9.0, 21.0, 9.0, 703.0, 9.0, 115.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 85.0, 327.0, 15.0, 86.0, 17.0, 138.0, 43.0, 141.0, 306.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 42.0, 84.0, 0.0, 46.0, 19.0, 130.0, 175.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [872.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 864.0, 15.0, 424.0, 536.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 662.0, 832.0, 140.0, 742.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 230.0, 205.0, 75.0, 7480.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3468.0, 0.0, 1973.0, 0.0, 0.0, 984.0, 0.0, 1226.0, 8.0, 330.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 563.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 323.0, 0.0, 0.0, 0.0, 323.0, 0.0, 0.0, 2333.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2728.0, 311.0, 0.0, 94.0, 0.0, 0.0, 468.0, 0.0, 0.0, 505.0, 0.0, 0.0, 0.0, 0.0, 748.0, 220.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1095.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.0, 2611.0, 452.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1962.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 882.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 703.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 327.0, 0.0, 86.0, 0.0, 138.0, 0.0, 141.0, 0.0, 217.0, 150.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
const _labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
const _eu_distance = [[291.89895511974686, 1400.9193410043279, 1264.3543807018664, 7406.318383650543, 4185.010991622364, 599.1585766723197, 3708.91668819886, 2841.106650585296, 2088.036637609599, 809.3571523128711], [8498.196043867192, 8381.211606921759, 8475.640447777383, 11308.17009953423, 9407.438652470713, 8515.806714574961, 9029.173384092255, 7879.837307965184, 6559.387014043309, 8534.470106573694], [9215.048507739935, 9209.233681474263, 9122.78400489675, 11848.178678598664, 9731.987926420788, 9181.827759220927, 9565.14197490032, 9342.057000468365, 9180.474334150715, 9114.442330718868], [572.9720761084261, 1391.7323736983342, 1177.567832441087, 7490.2018664385805, 4106.363476362023, 557.9668448931352, 3782.489259733595, 2908.0214923552403, 2171.8874280219957, 900.1749829894186], [4725.36284321109, 4619.992640686779, 3925.93619408161, 8727.94529084595, 2131.484459244308, 4386.04742336423, 5795.07480538431, 5440.456782293193, 4887.720736703356, 4571.280783325391], [1952.1416444510373, 2194.538448056903, 1959.6836479391259, 7716.378036358768, 4283.17837592599, 1852.9713975126544, 3812.102700610255, 3459.6319168373966, 2893.7859285026598, 2025.479449414385], [4492.650442667446, 4170.64982946303, 4241.364049453902, 7599.028029952252, 5941.015906391768, 4547.998240984708, 2537.018722831978, 5051.641317433375, 4666.287603652394, 4508.108916164293], [4587.280675956073, 4357.370537376871, 4393.672609560253, 8765.770530877477, 6076.00641869312, 4602.278348818116, 4540.246028575984, 3589.925904527836, 4615.897529191912, 4576.139858002593], [3613.291989308365, 3229.5050704403607, 3630.0892551010365, 8290.569461743868, 5199.663162167334, 3633.0999160496535, 5162.244182523721, 4119.9530337128845, 2902.2010612636745, 3677.141144965746], [902.0243899141531, 1589.9056575784614, 1321.5464426194035, 7514.073262884785, 3986.266172748629, 884.9723159511827, 3792.1302720238923, 2872.160859004941, 2286.3604265294657, 509.6940258625757]]
const _eu_distance_transferred = [[8.218974934684042, 12.66589119501909, 11.524071853777903, 11.32944420283986, 10.470111603574205, 11.71646890831423, 11.908055756304105, 12.657767762146596, 11.682071108272718, 11.279408327239842], [12.92986786425118, 11.972871250067122, 12.229367317720921, 12.95508465287873, 12.758468836256005, 12.98043377265802, 12.721209416398446, 10.465153011493545, 3.5653486064098785, 13.16995704379521], [12.04170824096145, 12.273856083388822, 9.91174519077706, 12.005327417872463, 10.583127148785668, 11.14707935421145, 12.233785270479995, 12.677330778972408, 13.030145677075721, 11.220218154802966], [12.507192743820047, 11.434122052761577, 7.484366738251067, 12.254655428473002, 7.6258185049904865, 7.648956231473067, 12.939004535938738, 13.453754092361564, 13.312171271039436, 11.454238913999951], [12.391833961758781, 11.911825158090148, 7.267449503045388, 13.25029083356576, 4.710058581881916, 6.992683382113245, 13.087156105473957, 12.878314954042512, 12.002820595864927, 11.280744639482284], [12.22852455843495, 11.648822168382091, 8.120986497044608, 12.038428299030548, 9.553456683240418, 9.004782152657084, 10.99137320730332, 13.365590147376569, 14.053780576129162, 11.900874152691316], [11.874668049385043, 10.33312734460745, 10.4657190217506, 11.141708771499678, 12.842853620529059, 12.812005608492495, 5.37460102583127, 12.613189908562441, 12.256947196760972, 12.671362427136577], [12.912006926083192, 10.95312172103303, 10.87756131957403, 13.089964167218982, 12.744362708850076, 12.788331512979306, 10.120442649851272, 8.127170420916459, 11.870259846456623, 12.615111372681435], [12.478983143520331, 8.811848372376486, 10.969640211521268, 12.486970163416867, 11.310467239112134, 12.312991220551892, 13.282689196258177, 11.68754756474996, 8.015360624097394, 12.887219288957231], [11.982894151387915, 12.78088698193975, 10.700950312464146, 12.935808893771004, 9.762857792837115, 10.3741492275829, 12.862242980309821, 12.299698791187517, 13.104529156590527, 5.15673861310084]]

const _ma_distance = [[949.0, 3757.0, 3312.0, 8794.0, 8591.0, 1737.0, 8537.0, 5191.0, 3907.0, 2337.0], [11862.0, 8610.0, 10993.0, 18713.0, 18216.0, 11854.0, 16964.0, 13300.0, 9178.0, 12938.0], [24845.0, 24305.0, 21930.0, 31396.0, 29141.0, 23745.0, 28931.0, 25051.0, 23653.0, 23505.0], [1663.0, 3191.0, 2568.0, 8066.0, 8491.0, 1207.0, 8509.0, 5257.0, 3791.0, 2313.0], [11400.0, 11954.0, 10149.0, 18159.0, 3906.0, 10664.0, 17482.0, 14232.0, 12256.0, 12000.0], [3967.0, 4991.0, 3576.0, 10878.0, 10213.0, 2779.0, 9109.0, 7509.0, 6193.0, 4507.0], [15570.0, 15742.0, 15789.0, 20301.0, 21280.0, 15770.0, 7776.0, 16934.0, 16752.0, 15396.0], [10152.0, 10410.0, 10095.0, 17005.0, 16272.0, 9892.0, 11130.0, 5594.0, 10258.0, 10636.0], [8783.0, 8079.0, 8806.0, 15754.0, 14177.0, 8507.0, 15139.0, 10203.0, 5389.0, 9591.0], [2422.0, 4586.0, 3647.0, 9607.0, 8756.0, 2208.0, 9266.0, 6042.0, 4920.0, 1328.0]]
const _ma_distance_transferred = [[37.71859259467068, 50.64522547507952, 47.53576943569859, 32.610252130112436, 45.24507352868763, 42.58302395294554, 47.105710711091064, 47.98551147672721, 37.70594905058441, 33.9048943340963], [45.75705425365015, 47.92902190876473, 47.703316510281354, 39.40395544972932, 42.76695288811196, 34.9270456346959, 40.12195665456811, 44.959920830287, 14.056485569624604, 43.328547162406544], [50.82783065035696, 55.95741178316894, 46.731161190324805, 45.358258956239645, 50.31631046557791, 43.86472998896185, 55.14126854488906, 54.49729652039163, 46.95442986973232, 42.90440184037922], [41.997171808343474, 47.47904282489458, 33.33307315257725, 46.7527370242173, 31.671002018661596, 29.961442834993345, 46.02466236158971, 53.86862742799814, 42.99797425150522, 41.34721776382645], [38.50804165649796, 40.612957191727105, 27.21670600580229, 52.94302389357455, 16.83813873449542, 28.057918289118916, 36.25919009568624, 55.658691349539126, 41.495472005907445, 41.96010618950659], [46.10272216257496, 42.46236534047506, 33.6513411066968, 57.027557609969925, 39.095413129062926, 44.00049834417808, 42.70031707969338, 68.26652302610476, 57.08953232296425, 49.6691818305689], [41.45764045214362, 41.556864105473096, 41.660185794368836, 38.87477519263626, 42.92011146261082, 35.3707549967634, 26.693259016109895, 48.999614848389456, 32.02368265936265, 39.42439144313636], [47.05386746483528, 48.95218749178204, 44.677105661451456, 39.86228145824507, 45.73259354077028, 36.46212681910277, 41.990710620825325, 35.400731040819835, 33.76915891369301, 40.72412006632585], [41.227074770134635, 36.94564689849258, 41.84271348367177, 47.689664191539634, 35.02959484741218, 40.55895096352832, 40.58175692754486, 52.62079390386698, 37.09339984753562, 46.24210746689611], [41.557752528095584, 48.455138570787604, 36.65738556540363, 43.555670327140284, 36.09762963046957, 35.50282999054372, 42.562083791731226, 54.30814530037184, 44.43545712138968, 19.98564262220479]]

const _co_distance = [[0.5934474557767885, 0.13610150735902188, 0.24593064708954332, 0.2523141871337753, 0.368728842394883, 0.20329907260344796, 0.2450953953377588, 0.1352455002632894, 0.2592423765820701, 0.3157991916515389], [0.01673095954994208, 0.16533608679297235, 0.09398023797132245, 0.003105679437538927, 0.030355229093138602, 0.0017650859969900806, 0.07744019651187202, 0.37650678797732795, 0.9250332900129616, 0.007071271286733408], [0.017165904815526732, 0.0807061604643293, 0.14150956613822033, 0.004330083711485736, 0.1099253426986122, 0.09028247194833075, 0.11076481815372413, 0.11112755283913134, 0.13297445237582703, 0.1644919191829966], [0.02363772803094792, 0.20545486222657, 0.4321485491589576, 0.026700322648965862, 0.4367943311136302, 0.45695945436974306, 0.05971181762855005, 0.006070125386100381, 0.07559211035189912, 0.19116280910504713], [0.21159250797155593, 0.25736405286307346, 0.7313408271405659, 0.03773423626449264, 0.8949780194709036, 0.7258882820101529, 0.09758036524700102, 0.05283924462767025, 0.17334499627026975, 0.326665485659542], [0.01930259525705065, 0.16696699368541448, 0.31889591588911315, 0.008931581398145514, 0.2343998499615552, 0.29071365485162276, 0.2390776386016279, 0.00019720361876616896, 0.0004709612969660664, 0.11201015050573417], [0.23640253634622413, 0.4141597464355803, 0.3730770454426869, 0.2791227373258825, 0.1001649823414091, 0.0683268914551066, 0.8302544400982746, 0.1309993074378904, 0.18234150036363161, 0.14428636544829956], [0.05593167147388623, 0.3172434770393621, 0.29246757853760175, 0.004660600174665955, 0.06807765672486438, 0.04723160498742186, 0.4255068730667283, 0.6240641648006555, 0.22408103044662928, 0.11381373581240613], [0.036837501162909306, 0.4526105128588407, 0.16698180630869475, 0.006797567547192781, 0.14525118132206474, 0.04124557399831396, 0.02499661868290707, 0.20742826877897022, 0.5954727662772036, 0.040631810685788305], [0.1962581259171048, 0.10938629698416402, 0.3309859614715397, 0.031008708200929616, 0.4383108190217337, 0.357979587091406, 0.10648903669318967, 0.1538474511988088, 0.059647636486580474, 0.8351547956647243]]
const _co_distance_transferred = [[37.71859259467068, 50.64522547507952, 47.53576943569859, 32.610252130112436, 45.24507352868763, 42.58302395294554, 47.105710711091064, 47.98551147672721, 37.70594905058441, 33.9048943340963], [45.75705425365015, 47.92902190876473, 47.703316510281354, 39.40395544972932, 42.76695288811196, 34.9270456346959, 40.12195665456811, 44.959920830287, 14.056485569624604, 43.328547162406544], [50.82783065035696, 55.95741178316894, 46.731161190324805, 45.358258956239645, 50.31631046557791, 43.86472998896185, 55.14126854488906, 54.49729652039163, 46.95442986973232, 42.90440184037922], [41.997171808343474, 47.47904282489458, 33.33307315257725, 46.7527370242173, 31.671002018661596, 29.961442834993345, 46.02466236158971, 53.86862742799814, 42.99797425150522, 41.34721776382645], [38.50804165649796, 40.612957191727105, 27.21670600580229, 52.94302389357455, 16.83813873449542, 28.057918289118916, 36.25919009568624, 55.658691349539126, 41.495472005907445, 41.96010618950659], [46.10272216257496, 42.46236534047506, 33.6513411066968, 57.027557609969925, 39.095413129062926, 44.00049834417808, 42.70031707969338, 68.26652302610476, 57.08953232296425, 49.6691818305689], [41.45764045214362, 41.556864105473096, 41.660185794368836, 38.87477519263626, 42.92011146261082, 35.3707549967634, 26.693259016109895, 48.999614848389456, 32.02368265936265, 39.42439144313636], [47.05386746483528, 48.95218749178204, 44.677105661451456, 39.86228145824507, 45.73259354077028, 36.46212681910277, 41.990710620825325, 35.400731040819835, 33.76915891369301, 40.72412006632585], [41.227074770134635, 36.94564689849258, 41.84271348367177, 47.689664191539634, 35.02959484741218, 40.55895096352832, 40.58175692754486, 52.62079390386698, 37.09339984753562, 46.24210746689611], [41.557752528095584, 48.455138570787604, 36.65738556540363, 43.555670327140284, 36.09762963046957, 35.50282999054372, 42.562083791731226, 54.30814530037184, 44.43545712138968, 19.98564262220479]]

class App extends Component {
  constructor(props) {
    super(props)
    this.state = {
      inputData: null,
      loaded: false
    }
  }

  componentDidMount = () => {
    //this.getData();
  }

  getScatterOption = (series) => {
    let option = {
      tooltip : {
        trigger: 'axis',
          showDelay : 0,
          axisPointer:{
          show: true,
            type : 'cross',
            lineStyle: {
            type : 'dashed',
              width : 1
          }
        },
        zlevel: 1
      },
      legend: {
        data:['sin','cos']
      },
      toolbox: {
        show : true,
          feature : {
          mark : {show: true},
          dataZoom : {show: true},
          dataView : {show: true, readOnly: false},
          restore : {show: true},
          saveAsImage : {show: true}
        }
      },
      xAxis : [
        {
          type : 'value',
          scale:true
        }
      ],
        yAxis : [
        {
          type : 'value',
          scale:true
        }
      ],
        series : series
    };
    return option
  }

  getBarOption = (xAxis, series) => {
    let option = {
      color: ['#3398DB'],
      tooltip : {
        trigger: 'axis',
        axisPointer : {            // 坐标轴指示器，坐标轴触发有效
          type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
        }
      },
      grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
      },
      xAxis : xAxis,
      yAxis : [
        {
          type : 'value'
        }
      ],
      series : series
    };
    return option
  }

  getData = () => {
    /*
    fetch("http://localhost:5000/data", {
      method: 'get'
    })
      .then(res => res.json())
      .then(
        (result) => {
          if (result.status)
            console.log("Error");
          else{
            let data = result.data;
            let labels = result.labels;
            this.setState({ 
              inputData: data,
              labels: labels,
              loaded: true
            })
          }
          
          //console.log(result)
          //console.log(result.data)
          //console.log(result.labels)
        }
      )*/
  }

  getBarOption2 = (distance) => {
    let series = [];
    let size = _data.length/2;

    for ( let i in distance){
      let temp = 
      {
        name:'Code'+_labels[i],
        type:'bar',
        barWidth: '5%',
        data:distance[i]
      }
      series.push(temp)
    };

    let xAxis = [
      {
        type : 'category',
        data : _labels.slice(0,size),
        axisTick: {
          alignWithLabel: true
        }
      }
    ];

    let barOption = this.getBarOption(xAxis, series);
    return barOption
  }

  render() {
    let inputData = _data
    let labels = _labels

    let size = inputData.length/2
    let javaData = inputData.slice(0,size)
    let pyData = inputData.slice(size)

    /*
    let model = new TSNE({
      dim: 2,
      perplexity: 30.0,
      earlyExaggeration: 4.0,
      learningRate: 100.0,
      nIter: 1000,
      metric: 'jaccard'
    });

    let error, iter, output, outputScaled;
    let pyData, javaData
    if (this.state.loaded) {
      model.init({
        data: inputData,
        type: 'dense'
      });

      [error, iter] = model.run();
      output = model.getOutput();
      outputScaled = model.getOutputScaled();
      console.log(output)
      console.log(outputScaled)
      let size = output.length/2
      javaData = output.slice(0,size)
      pyData = output.slice(size)
      console.log(javaData)
      console.log(pyData)

      let series = [
        {
          name:'java',
          type:'scatter',
          large: true,
          symbolSize: 10,
          data: javaData
        },
        {
          name:'python',
          type:'scatter',
          large: true,
          symbolSize: 10,
          data: pyData
        }
      ]
      return (
        <div className="App">
          <Scatter option={this.getScatterOption(series)}/>
        </div>
      )
    }
    */

    return (
      <div className="App">
        <h1>Euclidean Before Transfer</h1>
        <Bar option={this.getBarOption2(_eu_distance)}/>
        <h1>Eculidean After Transfer</h1>
        <Bar option={this.getBarOption2(_eu_distance_transferred)}/>

        <h1>Manhattan Before Transfer</h1>
        <Bar option={this.getBarOption2(_ma_distance)}/>
        <h1>Manhattan After Transfer</h1>
        <Bar option={this.getBarOption2(_ma_distance_transferred)}/>

        <h1>Cosine Before Transfer</h1>
        <Bar option={this.getBarOption2(_co_distance)}/>
        <h1>Cosine After Transfer</h1>
        <Bar option={this.getBarOption2(_co_distance_transferred)}/>
      </div>
    );
  }
}

export default App;
